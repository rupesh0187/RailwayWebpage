// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RailwayWebpage.Models.RailwayDbContext;

#nullable disable

namespace RailwayWebpage.Migrations
{
    [DbContext(typeof(RailwayDbContext))]
    [Migration("20231219051803_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RailwayWebpage.Models.Railway.From", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("froms");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.LoginPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<int>("RegisterPageId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RegisterPageId");

                    b.ToTable("loginPages");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.PassengerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<string>("Berth")
                        .HasColumnType("text");

                    b.Property<int>("CMonth")
                        .HasColumnType("integer");

                    b.Property<int>("CYear")
                        .HasColumnType("integer");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<long>("CardNumber")
                        .HasColumnType("bigint");

                    b.Property<int>("Cvno")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("PName")
                        .HasColumnType("text");

                    b.Property<long>("Phoneno")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("passengerdetailes");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.RegisterPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("registerPages");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.To", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.ToTable("tos");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.TPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("TrainNameId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrainNameId");

                    b.ToTable("tprices");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.TrainName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ToId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ToId");

                    b.ToTable("trainnames");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.LoginPage", b =>
                {
                    b.HasOne("RailwayWebpage.Models.Railway.RegisterPage", "RegisterPage")
                        .WithMany()
                        .HasForeignKey("RegisterPageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegisterPage");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.To", b =>
                {
                    b.HasOne("RailwayWebpage.Models.Railway.From", "From")
                        .WithMany()
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("From");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.TPrice", b =>
                {
                    b.HasOne("RailwayWebpage.Models.Railway.TrainName", "TrainName")
                        .WithMany()
                        .HasForeignKey("TrainNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrainName");
                });

            modelBuilder.Entity("RailwayWebpage.Models.Railway.TrainName", b =>
                {
                    b.HasOne("RailwayWebpage.Models.Railway.To", "To")
                        .WithMany()
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("To");
                });
#pragma warning restore 612, 618
        }
    }
}
